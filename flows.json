[
    {
        "id": "4c1c8ca0.447d94",
        "type": "tab",
        "label": "Cube",
        "disabled": false,
        "info": ""
    },
    {
        "id": "26093b29.39d8d4",
        "type": "tab",
        "label": "Setup Wireless SSID",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2c5d25cb.3428ca",
        "type": "subflow",
        "name": "App NavBar",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "c104210d.418eb"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "c104210d.418eb",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "ca529822.9112f8",
        "type": "subflow",
        "name": "HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "99bb1519.85fc18"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "e3c68b88.d82258",
        "type": "subflow",
        "name": "App CSS",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "f5a9eda8.5c5bc"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 320,
                "y": 80,
                "wires": [
                    {
                        "id": "f5a9eda8.5c5bc",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "8341090a.df9758",
        "type": "subflow",
        "name": "App HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "966e270e.701e48"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "6ad7c930.1a06b8",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Blinky-Lite-Tutorial",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "c427a7cd.35f1f8",
        "type": "websocket-listener",
        "path": "/websocket",
        "wholemsg": "false"
    },
    {
        "id": "79250bf3.365cc4",
        "type": "mqtt-broker",
        "name": "MQTT Broker",
        "broker": "somewhere.com",
        "port": "1883",
        "clientid": "$(MQTTCLIENTID)",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "c104210d.418eb",
        "type": "template",
        "z": "2c5d25cb.3428ca",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div class=\"jumbotron\" width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle;\"  width=\"20%\">\n                    <img src=\"/img/project-logo.png\" height=\"75px\"/>\n                </td>\n                <td width=\"60%\" style=\"text-align:center; vertical-align:middle;\">\n                    <h1 class=\"jumbotron-title big-text bold-text\">\n                        <img src=\"/img/{{{payload.navBarIcon}}}\" height=\"75px\" style=\"padding-right:20px;\"/><span>{{{payload.title}}}</span>\n                    </h1>\n                </td>\n                <td style=\"text-align:right; vertical-align:middle;\"  width=\"20%\"></td>\n            </tr>\n        </table>\n    </div>",
        "output": "str",
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "b9df3f26.ab53f",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n{{{payload.head}}}\n  </head>\n  <body>\n{{{payload.navBar}}}\n{{{payload.html.websocket}}}\n{{{payload.body}}}\n{{{payload.foot}}}\n  </body>\n</html>",
        "output": "str",
        "x": 1150,
        "y": 40,
        "wires": [
            [
                "d1d9e12b.926ff"
            ]
        ]
    },
    {
        "id": "895ba39c.86e59",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "Foot",
        "field": "payload.foot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div id=\"acknowledgeDialog\" title=\"Acknowledge\" class='card'>\n        <p class='card-title' id='acknowledgeDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='acknowledgeDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"optionDialog\" title=\"Option\" class='card'>\n        <p class='card-title' id='optionDialogTitle'>Choice</p>\n        <div class='card-body'>\n            <p class='tableText' id='optionDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"messageDialog\" title=\"Message\" class='card'>\n        <p class='card-title' id='messageDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='messageDialogText'>Text</p>\n        </div>\n    </div>\n    <script src=\"/scripts/popper.js\"></script>\n    <script src=\"/scripts/bootstrap.js\"></script>",
        "output": "str",
        "x": 690,
        "y": 40,
        "wires": [
            [
                "a9a62959.7c01e8"
            ]
        ]
    },
    {
        "id": "aa17ff35.7cdfd",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "Head",
        "field": "payload.head",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <meta charset=\"UTF-8\">\n    <link rel=\"icon\" href=\"/img/favicon.ico?v=4\" type=\"image/x-icon\"/>\n    <title>{{payload.title}}</title>\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui-timepicker-addon.css\"/>\n    <script src=\"/jquery/jquery.js\"></script>\n    <script src=\"/jquery/jquery-ui.js\"></script>\n    <script src=\"/jquery/jquery-ui-timepicker-addon.js\"></script>\n    <script src=\"/scripts/plotly-latest.min.js\"></script>\n    <script src=\"/scripts/pako.min.js\"></script>\n{{{payload.extraScripts}}}\n    <style>\n{{{payload.css}}}\n    </style>\n    <style>\n{{{payload.extraCss}}}\n    </style>\n    <script>\n{{{payload.utilityScripts}}}\n    </script>\n    <script>\n{{{payload.javascript}}}\n    </script>",
        "output": "str",
        "x": 570,
        "y": 40,
        "wires": [
            [
                "895ba39c.86e59"
            ]
        ]
    },
    {
        "id": "d1d9e12b.926ff",
        "type": "http response",
        "z": "ca529822.9112f8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1270,
        "y": 40,
        "wires": []
    },
    {
        "id": "c4ed2505.8c07e8",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "Utility Scripts",
        "field": "payload.utilityScripts",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var remoteApp = true;\n        var ws;\n        var userID = -1;\n        var useWebSocketsFlag = true;\n        var project = '{{{payload.project}}}';\n        var heartBeatImage = false;\n        var wsUri = '';\n        var wsConnected = false;\n\n        function setRemoteApp(remoteAppSet)\n        {\n            remoteApp  = remoteAppSet;\n        }\n        function webSocketConnected()\n        {\n            return wsConnected;\n        }\n        function useWebSockets(webSocketsFlag)\n        {\n            useWebSocketsFlag = webSocketsFlag;\n        }\n        function wsConnectC()\n        {\n            if (!useWebSocketsFlag)\n            {\n                return;\n            }\n            if (wsUri.length < 1)\n            {\n                var uri = window.location.href.split('://');\n                var wslead = 'ws://';\n                if (uri[0] == 'https') wslead = 'wss://';\n                var questionLocation = uri[1].indexOf('?');\n                if (questionLocation >= 0)\n                {\n                    uri[1] = uri[1].substring(0,questionLocation);\n//                    console.log(uri[1]);\n                }\n                if (uri[1].indexOf('/') < (uri[1].length - 1))\n                {\n                    wsUri = wslead + uri[1] + '/websocket';\n                }\n                else\n                {\n                    wsUri = wslead + uri[1] + 'websocket';\n                }\n            }\n            ws = new WebSocket(wsUri);\n            ws.onmessage = function(event)\n            {\n                onWebSocketMessage(JSON.parse(event.data));\n        \n            };\n            ws.onopen = function()\n            {\n                console.log(\"Websocket connected\");\n                wsConnected = true;\n                $('#webSocketStatus').html('Open');\n                $('#reOpenWebSocketButton').hide();\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n                onWebSocketOpen();\n            };\n            ws.onclose = function()\n            {\n                console.log(\"Websocket closed\");\n                wsConnected = false;\n                $('#webSocketStatus').html('Closed');\n                $('#reOpenWebSocketButton').show();\n                $('#webSocketStatusCard').show();\n                $('#webSocketStatusRow').css('padding-bottom','25px');\n                onWebSocketClose();\n                wsConnectC();\n            };\n        }\n\n        function getRandomInt(max)\n        {\n          return Math.floor(Math.random() * Math.floor(max));\n        }\n        $( document ).ready(function()\n        {\n            userID  = {{{payload.userID}}};\n            if (!useWebSocketsFlag)\n            {\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n            }\n            wsConnectC();\n            onDocumentReady();\n       });\n        $( function() \n        {\n            $( \"#acknowledgeDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() { $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n            $( \"#messageDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:[]\n                });\n        } );\n        function optionDialog(headerText, title, text, buttonTexts, buttonFunctions)\n        {\n            var buttonDefinitions = [];\n            for (var ii = 0; ii < buttonTexts.length; ++ii)\n            {\n                buttonDefinitions[ii] = \n                    {\n                        text: buttonTexts[ii],\n                        click: buttonFunctions[ii],\n                        showText: false\n                    };\n            }\n            $( \"#optionDialog\" ).dialog( \"option\", \"title\", headerText );   \n            $( \"#optionDialog\" ).dialog( \"option\", \"buttons\", buttonDefinitions);\n            $( \"#optionDialogTitle\" ).html(title);\n            $( \"#optionDialogText\" ).html(text);\n            $( \"#optionDialog\" ).dialog( \"open\" );\n        }\n        $( function() \n        {\n            $( \"#optionDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n        } );\n        function acknowledgeDialog(headerText, title, text)\n        {\n            $( \"#acknowledgeDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#acknowledgeDialogTitle\" ).html(title);\n            $( \"#acknowledgeDialogText\" ).html(text);\n            $( \"#acknowledgeDialog\" ).dialog( \"open\" );\n        }\n        function messageDialog(headerText, title, text)\n        {\n            $( \"#messageDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#messageDialogTitle\" ).html(title);\n            $( \"#messageDialogText\" ).html(text);\n            $( \"#messageDialog\" ).dialog( \"open\" );\n        }\n        function heartbeat()\n        {\n            heartBeatImage = !heartBeatImage;\n            var heartBeatImageSrc = '/img/heartRed.png';\n            if (heartBeatImage) heartBeatImageSrc = '/img/heartPink.png';\n            $('#heartBeatID').attr('src',heartBeatImageSrc);\n        }\n        function getCookie(extension)\n        {\n            var cookies = document.cookie.split(';');\n            var token = null;\n            var cookieName = project + extension + \"=\";\n            for (var icookie = 0; icookie < cookies.length; ++icookie)\n            {\n                var index = cookies[icookie].indexOf(cookieName);\n                if (index >= 0)\n                {\n                    token = cookies[icookie].substring(index + cookieName.length);\n                }\n            }\n            return token;\n        }\n        function sendActionMsg(topic,role,actionMsg)\n        {\n            var roleToken = \"\";\n            if (remoteApp) roleToken  = getCookie('Role');\n            if (roleToken == null)\n            {\n                location.reload();\n                return;\n            }\n            var webSocketMsg = \n            {\n                topic     : topic,\n                payload   : actionMsg,\n                userID    : userID,\n                token     : getCookie('Role'),\n                role      : role\n            };\n            ws.send(JSON.stringify(webSocketMsg));\n        }\n",
        "output": "str",
        "x": 430,
        "y": 40,
        "wires": [
            [
                "aa17ff35.7cdfd"
            ]
        ]
    },
    {
        "id": "99bb1519.85fc18",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "Get project name and userID",
        "func": "function getRandomInt(max)\n{\n  return Math.floor(Math.random() * Math.floor(max));\n}\nmsg.payload['project'] = global.get('project')\nmsg.payload['userID'] = getRandomInt(32768);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 220,
        "y": 40,
        "wires": [
            [
                "c4ed2505.8c07e8"
            ]
        ]
    },
    {
        "id": "a9a62959.7c01e8",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "html.websocket",
        "field": "payload.html.websocket",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- websocket status HTML -->\n    <div width=\"100%\">\n        <div class='row' id='webSocketStatusRow' style='padding-bottom: 0px;'>\n            <div class='col-md-12' align='center'>\n\n                <div class='card' id='webSocketStatusCard' >\n                    <p class='card-title'>Web Socket Status</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Websocket Status</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <button class='btn card-button btn-block big-text' id='reOpenWebSocketButton' onclick=\"wsConnectC()\">Re-open</button>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='webSocketStatus' >Closed</span>\n                                   </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 840,
        "y": 40,
        "wires": [
            [
                "35ffcf83.1547"
            ]
        ]
    },
    {
        "id": "35ffcf83.1547",
        "type": "function",
        "z": "ca529822.9112f8",
        "name": "IP filter",
        "func": "var ipfilter = [\n    \"127.0.0.16\"];\nvar ipAddress = ( msg.req.headers['x-forwarded-for'] || '').split(',').pop() || \n          msg.req.connection.remoteAddress || \n          msg.req.socket.remoteAddress || \n          msg.req.connection.socket.remoteAddress;\nif (ipAddress==undefined) return null;\nvar ipAddressSplit = ipAddress.split(\".\");\nfor (var ii =  0; ii < ipfilter.length; ++ii)\n{\n    var ipfilterSplit = ipfilter[ii].split(\".\");\n    if (ipAddress == ipfilter[ii])\n    { \n        return null;\n    }\n    if (ipfilterSplit[2] == '*')\n    {\n        if ((ipfilterSplit[0] == ipAddressSplit[0]) && (ipfilterSplit[1] == ipAddressSplit[1]))\n        {\n            return null;\n        }\n    }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 40,
        "wires": [
            [
                "b9df3f26.ab53f"
            ]
        ]
    },
    {
        "id": "f5a9eda8.5c5bc",
        "type": "template",
        "z": "e3c68b88.d82258",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "\t\t:root\n\t\t{\n\t\t\t--color1\t\t:\t#083357;\n\t\t\t--color2\t\t:\t#c6c2bb;\n\t\t\t--color3\t\t:\t#e7e7e7;\n\t\t\t--color4\t\t:\t#c6c2bb;\n\t\t\t--color5\t\t:\t#ffffff;\n\t\t\t--color6\t\t:\t#487895;\n\t\t\t--big-text\t\t: \t300%;\n\t\t\t--medium-text\t: \t200%;\n\t\t\t--bold-text\t\t: \t900;\n\t\t\t--vert-pad\t\t: \t25px;\n\t\t\t--horz-pad\t\t: \t25px;\n\t\t}\n\t\tbody\n\t\t{\n\t\t\tbackground-color\t\t:\tvar(--color1) !important;\n\t\t\tpadding-left\t\t:\t25px;\n\t\t\tpadding-right\t\t:\t25px;\n\t\t}\n\t\timg\n\t\t{\n\t\t\tobject-fit\t\t:\tcontain;\n\t\t}\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: white;\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color1) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color1) !important;\n          text-align: center;\n          border-style: solid;\n          border-width: 2px;\n          border-color: var(--color3);\n        }\n        .card-body\n        {\n          background-color: var(--color2);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n            color             :   var(--color5);\n            font-weight       :   900;\n            font-size         :   300%;\n        }\n        .card-title-button\n        {\n            color             :   var(--color5) !important;\n            background-color  :   var(--color1) !important;\n            font-weight       :   900;\n            font-size         :   300%;\n            font-style        :   italic;        \n        }\n        .card-text\n        {\n          color: var(--color6);\n          text-align: left;\n          font-size: var(--big-text);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--medium-text);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text);\n        }\n        .medium-text\n        {\n            font-size: var(--medium-text);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n\t\t.dialog-modal\n\t\t{\n\t\t\tdisplay\t\t:\tnone;\n\t\t\tposition\t\t:\tfixed;\n\t\t\tz-index\t\t:\t1;\n\t\t\tleft\t\t:\t0;\n\t\t\ttop\t\t:\t0;\n\t\t\twidth\t\t:\t100%;\n\t\t\theight\t\t:\t100%;\n\t\t\toverflow\t\t:\tauto;\n\t\t\tbackground-color\t\t:\trgba(0,0,0,0.4);\n\t\t}\n\t\t.dialog-modal-content\n\t\t{\n\t\t\tmargin\t\t:\t15% auto;\n\t\t\tpadding\t\t:\t20px;\n\t\t\tborder\t\t:\t1px solid #888;\n\t\t\twidth\t\t:\t80%;\n\t\t}\n\t\t.navbar\n\t\t{\n\t\t\tbackground-color\t\t:\tvar(--color1) !important;\n\t\t\tcolor\t\t:\tvar(--color5);\n\t\t\tpadding-top\t\t:\t25px;\n\t\t\tpadding-bottom\t\t:\t25px;\n\t\t}\n\t\t.navbar-title\n\t\t{\n\t\t\tcolor\t\t:\tvar(--color5);\n\t\t\tfont-weight\t\t:\t900;\n\t\t\tfont-size\t\t:\t300%;\n\t\t}\n\t\t.alarmLimit-card\n\t\t{\n\t\t\tbackground-color\t\t:\tvar(--color1) !important;\n\t\t\ttext-align\t\t:\tcenter;\n\t\t\tborder-style\t\t:\tsolid;\n\t\t\tborder-width\t\t:\t2px;\n\t\t\tborder-color\t\t:\tvar(--color3);\n\t\t}\n\t\t.alarmLimit-card-body\n\t\t{\n\t\t\tbackground-color\t\t:\tvar(--color2);\n\t\t}\n\t\t.alarmLimit-card-title\n\t\t{\n\t\t\tcolor\t\t:\tvar(--color5);\n\t\t\tfont-weight\t\t:\t900;\n\t\t\tfont-size\t\t:\t300%;\n\t\t\tfont-style\t\t:\titalic;\n\t\t}\n\t\t.alarmLimit-label-text\n\t\t{\n\t\t\tcolor\t\t:\tvar(--color6);\n\t\t\ttext-align\t\t:\tleft;\n\t\t\tfont-size\t\t:\t300%;\n\t\t}\n\t\t.alarmLimit-input-text\n\t\t{\n\t\t\ttext-align\t\t:\tcenter;\n\t\t\tfont-size\t\t:\t300%;\n\t\t\twidth\t\t:\t100%;\n\t\t}\n\t\t.alarmLimit-button\n\t\t{\n\t\t\tfont-size\t\t:\t300%;\n\t\t\tcolor\t\t:\tvar(--color5) !important;\n\t\t\tbackground-color\t\t:\tvar(--color1) !important;\n\t\t\tfont-weight\t\t:\t900;\n\t\t\twidth\t\t:\t80%  !important;\n\t\t}\n\t\t.archivePlotCard-containerRow\n\t\t{\n\t\t\tpadding-bottom\t\t:\t25px;\n\t\t}\n\t\t.archivePlotCard\n\t\t{\n\t\t\tbackground-color\t\t:\tvar(--color1) !important;\n\t\t\ttext-align\t\t:\tcenter;\n\t\t\tborder-style\t\t:\tsolid;\n\t\t\tborder-width\t\t:\t2px;\n\t\t\tborder-color\t\t:\tvar(--color3);\n\t\t}\n\t\t.archivePlotCard-body\n\t\t{\n\t\t\tbackground-color\t\t:\tvar(--color2);\n\t\t}\n\t\t.archivePlotCard-title\n\t\t{\n\t\t\tcolor\t\t:\tvar(--color5);\n\t\t\tfont-weight\t\t:\t900;\n\t\t\tfont-size\t\t:\t300%;\n\t\t\tfont-style\t\t:\titalic;\n\t\t}\n\t\t.archivePlotCard-title-button\n\t\t{\n\t\t\tcolor\t\t:\tvar(--color5) !important;\n\t\t\tbackground-color\t\t:\tvar(--color1) !important;\n\t\t\tfont-weight\t\t:\t900;\n\t\t\tfont-size\t\t:\t300%;\n\t\t\tborder-style\t\t:\tsolid;\n\t\t\tborder-width\t\t:\t2px;\n\t\t\tborder-color\t\t:\tvar(--color3);\n\t\t}\n\t\t.archiveCard-timeType-span\n\t\t{\n\t\t\tcolor\t\t:\tblack;\n\t\t\tfont-size\t\t:\t300%;\n\t\t}\n\t\t.archive-button\n\t\t{\n\t\t\tbackground-color\t\t:\tvar(--color1);\n\t\t\tcolor\t\t:\tvar(--color5);\n\t\t\tfont-size\t\t:\t200%;\n\t\t}\n\t\t.archive-button-pressed\n\t\t{\n\t\t\tbackground-color\t\t:\tvar(--color5);\n\t\t\tcolor\t\t:\tvar(--color1);\n\t\t\tfont-size\t\t:\t200%;\n\t\t}\n\t\t.timePlotCard-containerRow\n\t\t{\n\t\t\tpadding-bottom\t\t:\t25px;\n\t\t}\n\t\t.timePlotCard\n\t\t{\n\t\t\tbackground-color\t\t:\tvar(--color1) !important;\n\t\t\ttext-align\t\t:\tcenter;\n\t\t\tborder-style\t\t:\tsolid;\n\t\t\tborder-width\t\t:\t2px;\n\t\t\tborder-color\t\t:\tvar(--color3);\n\t\t}\n\t\t.timePlotCard-body\n\t\t{\n\t\t\tbackground-color\t\t:\tvar(--color2);\n\t\t}\n\t\t.timePlotCard-title\n\t\t{\n\t\t\tcolor\t\t:\tvar(--color5);\n\t\t\tfont-weight\t\t:\t900;\n\t\t\tfont-size\t\t:\t300%;\n\t\t\tfont-style\t\t:\titalic;\n\t\t}\n\t\t.timePlotCard-title-button\n\t\t{\n\t\t\tcolor\t\t:\tvar(--color5) !important;\n\t\t\tbackground-color\t\t:\tvar(--color1) !important;\n\t\t\tfont-weight\t\t:\t900;\n\t\t\tfont-size\t\t:\t300%;\n\t\t\tborder-style\t\t:\tsolid;\n\t\t\tborder-width\t\t:\t2px;\n\t\t\tborder-color\t\t:\tvar(--color3);\n\t\t}\n\t\t.vectorPlotCard-containerRow\n\t\t{\n\t\t\tpadding-bottom\t\t:\t25px;\n\t\t}\n\t\t.vectorPlotCard\n\t\t{\n\t\t\tbackground-color\t\t:\tvar(--color1) !important;\n\t\t\ttext-align\t\t:\tcenter;\n\t\t\tborder-style\t\t:\tsolid;\n\t\t\tborder-width\t\t:\t2px;\n\t\t\tborder-color\t\t:\tvar(--color3);\n\t\t}\n\t\t.vectorPlotCard-body\n\t\t{\n\t\t\tbackground-color\t\t:\tvar(--color2);\n\t\t}\n\t\t.vectorPlotCard-title\n\t\t{\n\t\t\tcolor\t\t:\tvar(--color5);\n\t\t\tfont-weight\t\t:\t900;\n\t\t\tfont-size\t\t:\t300%;\n\t\t\tfont-style\t\t:\titalic;\n\t\t}\n\t\t.vectorPlotCard-title-button\n\t\t{\n\t\t\tcolor\t\t:\tvar(--color5) !important;\n\t\t\tbackground-color\t\t:\tvar(--color1) !important;\n\t\t\tfont-weight\t\t:\t900;\n\t\t\tfont-size\t\t:\t300%;\n\t\t\tborder-style\t\t:\tsolid;\n\t\t\tborder-width\t\t:\t2px;\n\t\t\tborder-color\t\t:\tvar(--color3);\n\t\t}\n\t\t.iframeCard-containerRow\n\t\t{\n\t\t\tpadding-bottom\t\t:\t25px;\n\t\t}\n\t\t.iframeCard\n\t\t{\n\t\t\tbackground-color\t\t:\tvar(--color1) !important;\n\t\t\ttext-align\t\t:\tcenter;\n\t\t\tborder-style\t\t:\tsolid;\n\t\t\tborder-width\t\t:\t2px;\n\t\t\tborder-color\t\t:\tvar(--color3);\n\t\t}\n\t\t.iframeCard-body\n\t\t{\n\t\t\tbackground-color\t\t:\tvar(--color2);\n\t\t}\n\t\t.iframeCard-title\n\t\t{\n\t\t\tcolor\t\t:\tvar(--color5);\n\t\t\tfont-weight\t\t:\t900;\n\t\t\tfont-size\t\t:\t300%;\n\t\t\tfont-style\t\t:\titalic;\n\t\t}\n\t\t.iframeCard-title-button\n\t\t{\n\t\t\tcolor\t\t:\tvar(--color5) !important;\n\t\t\tbackground-color\t\t:\tvar(--color1) !important;\n\t\t\tfont-weight\t\t:\t900;\n\t\t\tfont-size\t\t:\t300%;\n\t\t\tborder-style\t\t:\tsolid;\n\t\t\tborder-width\t\t:\t2px;\n\t\t\tborder-color\t\t:\tvar(--color3);\n\t\t}\n\t\t.cubeRowCard-containerRow\n\t\t{\n\t\t\tpadding-bottom\t\t:\t25px;\n\t\t}\n\t\t.cubeRowCard\n\t\t{\n\t\t\tbackground-color\t\t:\tvar(--color1) !important;\n\t\t\ttext-align\t\t:\tcenter;\n\t\t\tborder-style\t\t:\tsolid;\n\t\t\tborder-width\t\t:\t2px;\n\t\t\tborder-color\t\t:\tvar(--color3);\n\t\t}\n\t\t.cubeRowCard-body\n\t\t{\n\t\t\tbackground-color\t\t:\tvar(--color2);\n\t\t}\n\t\t.cubeRowCard-title\n\t\t{\n\t\t\tcolor\t\t:\tvar(--color5);\n\t\t\tfont-weight\t\t:\t900;\n\t\t\tfont-size\t\t:\t300%;\n\t\t\tfont-style\t\t:\titalic;\n\t\t}\n\t\t.cubeRowCard-title-button\n\t\t{\n\t\t\tcolor\t\t:\tvar(--color5) !important;\n\t\t\tbackground-color\t\t:\tvar(--color1) !important;\n\t\t\tfont-weight\t\t:\t900;\n\t\t\tfont-size\t\t:\t300%;\n\t\t\tborder-style\t\t:\tsolid;\n\t\t\tborder-width\t\t:\t2px;\n\t\t\tborder-color\t\t:\tvar(--color3);\n\t\t}\n\t\t.cubeRowParameterView-label-column\n\t\t{\n\t\t\tcolor\t\t:\tblack;\n\t\t\tfont-size\t\t:\t200%;\n\t\t\ttext-align\t\t:\tleft;\n\t\t\twidth\t\t:\t50%;\n\t\t}\n\t\t.cubeRowParameterView-widget-column-1\n\t\t{\n\t\t\twidth\t\t:\t30%;\n\t\t\talign\t\t:\tcenter;\n\t\t\ttext-align\t\t:\tcenter;\n\t\t\tfont-size\t\t:\t200%;\n\t\t}\n\t\t.cubeRowParameterView-widget-column-2\n\t\t{\n\t\t\twidth\t\t:\t10%;\n\t\t\talign\t\t:\tcenter;\n\t\t\ttext-align\t\t:\tcenter;\n\t\t\tfont-size\t\t:\t200%;\n\t\t}\n\t\t.cubeRowParameterView-widget-column-3\n\t\t{\n\t\t\twidth\t\t:\t10%;\n\t\t\talign\t\t:\tcenter;\n\t\t\ttext-align\t\t:\tcenter;\n\t\t\tfont-size\t\t:\t200%;\n\t\t}\n\t\t.cubeRowParameterView-alarmConfig-column\n\t\t{\n\t\t\twidth\t\t:\t10%;\n\t\t\ttext-align\t\t:\tright;\n\t\t}\n\t\t.cubeRowParameterView-alarmConfig-button\n\t\t{\n\t\t\twidth\t\t:\t40px;\n\t\t\theight\t\t:\t40px;\n\t\t}\n\t\t.cubeRowParameterView-unit-span\n\t\t{\n\t\t\tfont-size\t\t:\t100%;\n\t\t\tcolor\t\t:\tblack;\n\t\t}\n\t\t.onOffSetCube-button\n\t\t{\n\t\t\tfont-size\t\t:\t100%;\n\t\t\tcolor\t\t:\tblack;\n\t\t}\n\t\t.numberSetCube-inputbox\n\t\t{\n\t\t\tfont-size\t\t:\t100%;\n\t\t\twidth\t\t:\t100%;\n\t\t\ttext-align\t\t:\tcenter;\n\t\t}\n\t\t.numberSetCube-button\n\t\t{\n\t\t\tcolor\t\t:\tvar(--color5) !important;\n\t\t\tbackground-color\t\t:\tvar(--color1) !important;\n\t\t\tfont-weight\t\t:\t900;\n\t\t\tfont-size\t\t:\t100%;\n\t\t}\n\t\t.dropChoiceCube-select\n\t\t{\n\t\t\tfont-size\t\t:\t100%;\n\t\t\twidth\t\t:\t100%;\n\t\t\ttext-align\t\t:\tcenter;\n\t\t\tpadding-top\t\t:\t10px;\n\t\t\tpadding-bottom\t\t:\t10px;\n\t\t}\n\t\t.dropChoiceSetCube-button\n\t\t{\n\t\t\tcolor\t\t:\tvar(--color5) !important;\n\t\t\tbackground-color\t\t:\tvar(--color1) !important;\n\t\t\tfont-weight\t\t:\t900;\n\t\t\tfont-size\t\t:\t100%;\n\t\t}\n\t\t.numberReadCube-span\n\t\t{\n\t\t\tfont-size\t\t:\t100%;\n\t\t\tcolor\t\t:\tblack;\n\t\t}\n\t\t.imageReadCube\n\t\t{\n\t\t\theight\t\t:\t40px;\n\t\t}\n\t\t.stateChoiceCube-stateColumn-column\n\t\t{\n\t\t\tcolor\t\t:\tblack;\n\t\t\tfont-size\t\t:\t200%;\n\t\t\ttext-align\t\t:\tcenter;\n\t\t\tpadding-left\t\t:\t20%;\n\t\t\twidth\t\t:\t50%;\n\t\t}\n\t\t.stateChoiceCube-button\n\t\t{\n\t\t\tfont-size\t\t:\t100%;\n\t\t\tcolor\t\t:\tblack;\n\t\t}\n\t\t.stateChoiceCube-alarmConfig-column\n\t\t{\n\t\t\twidth\t\t:\t10%;\n\t\t\ttext-align\t\t:\tright;\n\t\t}\n\t\t.stateChoiceCube-alarmConfig-button\n\t\t{\n\t\t\twidth\t\t:\t40px;\n\t\t\theight\t\t:\t40px;\n\t\t}\n\t\t.gaugeCube-label\n\t\t{\n\t\t\tcolor\t\t:\tblack;\n\t\t\tfont-size\t\t:\t200%;\n\t\t}\n\t\t.gaugeCube-column\n\t\t{\n\t\t\tcolor\t\t:\tblack;\n\t\t\tfont-size\t\t:\t200%;\n\t\t\ttext-align\t\t:\tcenter;\n\t\t\tpadding-left\t\t:\t10%;\n\t\t\twidth\t\t:\t90%;\n\t\t}\n\t\t.gaugeCube-div\n\t\t{\n\t\t\toverflow\t\t:\thidden;\n\t\t\twidth\t\t:\t100%;\n\t\t\tdisplay\t\t:\tflex;\n\t\t\tjustify-content\t\t:\tcenter;\n\t\t}\n\t\t.gaugeCube-alarmConfig-column\n\t\t{\n\t\t\twidth\t\t:\t10%;\n\t\t\ttext-align\t\t:\tright;\n\t\t}\n\t\t.gaugeCube-alarmConfig-button\n\t\t{\n\t\t\twidth\t\t:\t40px;\n\t\t\theight\t\t:\t40px;\n\t\t}\n\t\t.hbarCube-label\n\t\t{\n\t\t\tcolor\t\t:\tblack;\n\t\t\tfont-size\t\t:\t200%;\n\t\t}\n\t\t.hbarCube-column\n\t\t{\n\t\t\tcolor\t\t:\tblack;\n\t\t\tfont-size\t\t:\t200%;\n\t\t\ttext-align\t\t:\tcenter;\n\t\t\tpadding-left\t\t:\t10%;\n\t\t\twidth\t\t:\t90%;\n\t\t}\n\t\t.hbarCube-div\n\t\t{\n\t\t\toverflow\t\t:\thidden;\n\t\t\twidth\t\t:\t100%;\n\t\t\tdisplay\t\t:\tflex;\n\t\t\tjustify-content\t\t:\tcenter;\n\t\t}\n\t\t.hbarCube-alarmConfig-column\n\t\t{\n\t\t\twidth\t\t:\t10%;\n\t\t\ttext-align\t\t:\tright;\n\t\t}\n\t\t.hbarCube-alarmConfig-button\n\t\t{\n\t\t\twidth\t\t:\t40px;\n\t\t\theight\t\t:\t40px;\n\t\t}\n\t\t.userCard-containerRow\n\t\t{\n\t\t\tpadding-bottom\t\t:\t25px;\n\t\t}\n\t\t.userCard\n\t\t{\n\t\t\tbackground-color\t\t:\tvar(--color1) !important;\n\t\t\ttext-align\t\t:\tcenter;\n\t\t\tborder-style\t\t:\tsolid;\n\t\t\tborder-width\t\t:\t2px;\n\t\t\tborder-color\t\t:\tvar(--color5);\n\t\t}\n\t\t.userCard-body\n\t\t{\n\t\t\tbackground-color\t\t:\tvar(--color2);\n\t\t}\n\t\t.userCard-title\n\t\t{\n\t\t\tcolor\t\t:\tvar(--color5);\n\t\t\tfont-weight\t\t:\t900;\n\t\t\tfont-size\t\t:\t300%;\n\t\t\tfont-style\t\t:\titalic;\n\t\t}\n\t\t.userCard-title-button\n\t\t{\n\t\t\tcolor\t\t:\tvar(--color5) !important;\n\t\t\tbackground-color\t\t:\tvar(--color1) !important;\n\t\t\tfont-weight\t\t:\t900;\n\t\t\tfont-size\t\t:\t300%;\n\t\t\tborder-style\t\t:\tsolid;\n\t\t\tborder-width\t\t:\t2px;\n\t\t\tborder-color\t\t:\tvar(--color3);\n\t\t}\n\t\t.userCard-label\n\t\t{\n\t\t\ttext-align\t\t:\tleft;\n\t\t\tfont-size\t\t:\t300%;\n\t\t\tcolor\t\t:\tblack;\n\t\t}\n\t\t.userCard-data\n\t\t{\n\t\t\ttext-align\t\t:\tleft;\n\t\t\tfont-size\t\t:\t300%;\n\t\t\tcolor\t\t:\tvar(--color6);\n\t\t}\n\t\t.userCard-button\n\t\t{\n\t\t\tfont-size\t\t:\t300%;\n\t\t\tcolor\t\t:\tvar(--color5) !important;\n\t\t\tbackground-color\t\t:\tvar(--color1) !important;\n\t\t\tfont-weight\t\t:\t900;\n\t\t\twidth\t\t:\t80%  !important;\n\t\t}\n\t\t.okCancelCard\n\t\t{\n\t\t\tbackground-color\t\t:\tvar(--color1) !important;\n\t\t\ttext-align\t\t:\tcenter;\n\t\t\tborder-style\t\t:\tsolid;\n\t\t\tborder-width\t\t:\t2px;\n\t\t\tborder-color\t\t:\tvar(--color5);\n\t\t}\n\t\t.okCancelCard-body\n\t\t{\n\t\t\tbackground-color\t\t:\tvar(--color2);\n\t\t}\n\t\t.okCancelCard-title\n\t\t{\n\t\t\tcolor\t\t:\tvar(--color5);\n\t\t\tfont-weight\t\t:\t900;\n\t\t\tfont-size\t\t:\t300%;\n\t\t\tfont-style\t\t:\titalic;\n\t\t}\n\t\t.okCancelCard-button\n\t\t{\n\t\t\tfont-size\t\t:\t200%;\n\t\t\tcolor\t\t:\tvar(--color5) !important;\n\t\t\tbackground-color\t\t:\tvar(--color1) !important;\n\t\t\tfont-weight\t\t:\t900;\n\t\t\twidth\t\t:\t60%  !important;\n\t\t}\n\t\t.okCancelCard-text\n\t\t{\n\t\t\tfont-size\t\t:\t300%;\n\t\t\tcolor\t\t:\tvar(--color6);\n\t\t}\n\t\t.okCancelCard-inputbox\n\t\t{\n\t\t\tcolor\t\t:\tblack;\n\t\t\tfont-size\t\t:\t300%;\n\t\t\twidth\t\t:\t80%;\n\t\t\tpadding-top\t\t:\t2px;\n\t\t\tpadding-bottom\t\t:\t2px;\n\t\t\ttext-align\t\t:\tcenter;\n\t\t}\n\t\t.cubeListChooser-containerRow\n\t\t{\n\t\t\tpadding-bottom\t\t:\t25px;\n\t\t}\n\t\t.cubeListChooser\n\t\t{\n\t\t\tbackground-color\t\t:\tvar(--color1) !important;\n\t\t\ttext-align\t\t:\tcenter;\n\t\t\tborder-style\t\t:\tsolid;\n\t\t\tborder-width\t\t:\t2px;\n\t\t\tborder-color\t\t:\tvar(--color3);\n\t\t}\n\t\t.cubeListChooser-body\n\t\t{\n\t\t\tbackground-color\t\t:\tvar(--color2);\n\t\t}\n\t\t.cubeListChooser-title\n\t\t{\n\t\t\tcolor\t\t:\tvar(--color5);\n\t\t\tfont-weight\t\t:\t900;\n\t\t\tfont-size\t\t:\t300%;\n\t\t\tfont-style\t\t:\titalic;\n\t\t}\n\t\t.cubeListChooser-title-button\n\t\t{\n\t\t\tcolor\t\t:\tvar(--color5) !important;\n\t\t\tbackground-color\t\t:\tvar(--color1) !important;\n\t\t\tfont-weight\t\t:\t900;\n\t\t\tfont-size\t\t:\t300%;\n\t\t\tborder-style\t\t:\tsolid;\n\t\t\tborder-width\t\t:\t2px;\n\t\t\tborder-color\t\t:\tvar(--color3);\n\t\t}\n\t\t.cubeListChooser-tableHeading\n\t\t{\n\t\t\tcolor\t\t:\tvar(--color1) !important;\n\t\t\tfont-size\t\t:\t125%;\n\t\t}\n\t\t.cubeListChooser-csv-linked\n\t\t{\n\t\t\tcolor\t\t:\tvar(--color1)  !important;\n\t\t\tfont-size\t\t:\t125%;\n\t\t\ttext-decoration\t\t:\tunderline   !important;\n\t\t}\n\t\t.cubeListChooser-select\n\t\t{\n\t\t\tcolor\t\t:\tblack  !important;\n\t\t\tbackground-color\t\t:\tvar(--color5)  !important;\n\t\t\tfont-size\t\t:\t125%;\n\t\t\twidth\t\t:\t100%;\n\t\t\tpadding-top\t\t:\t5px;\n\t\t\tpadding-bottom\t\t:\t5px;\n\t\t}\n\t\t.cubeListChooser-tableText\n\t\t{\n\t\t\tcolor\t\t:\tblack;\n\t\t\tfont-size\t\t:\t100%;\n\t\t\twidth\t\t:\t100%;\n\t\t}\n\t\t.cubeListChooser-tableText2\n\t\t{\n\t\t\tcolor\t\t:\tblack;\n\t\t\tfont-size\t\t:\t125%;\n\t\t\twidth\t\t:\t100%;\n\t\t}\n\t\t.cubeListChooser-tableText3\n\t\t{\n\t\t\tcolor\t\t:\tblack;\n\t\t\tfont-size\t\t:\t200%;\n\t\t\twidth\t\t:\t100%;\n\t\t}\n\t\t.cubeListChooser-alarmConfig-column\n\t\t{\n\t\t\ttext-align\t\t:\tright;\n\t\t}\n\t\t.cubeListChooser-alarmConfig-button\n\t\t{\n\t\t\twidth\t\t:\t30px;\n\t\t}\n\t\t.cubeListChooser-inputbox\n\t\t{\n\t\t\tcolor\t\t:\tblack;\n\t\t\tfont-size\t\t:\t125%;\n\t\t\twidth\t\t:\t100%;\n\t\t\tpadding-top\t\t:\t2px;\n\t\t\tpadding-bottom\t\t:\t2px;\n\t\t\ttext-align\t\t:\tcenter;\n\t\t}\n\t\t.cubeListChooser-button\n\t\t{\n\t\t\tfont-size\t\t:\t125%;\n\t\t\tpadding-top\t\t:\t10px;\n\t\t\tpadding-bottom\t\t:\t10px;\n\t\t}\n\t\t.cubeListChooser-radio\n\t\t{\n\t\t\twidth\t\t:\t25px;\n\t\t\theight\t\t:\t25px;\n\t\t}\n \t\t.logbookHeader\n\t\t{\n\t\t\tfont-size\t\t:\t200%;\n\t\t\tcolor : var(--color6);\n\t\t\tfont-weight: bold;\n\t\t}\n \t\t.logbookEntry\n\t\t{\n\t\t\tfont-size\t\t:\t150%;\n\t\t\tcolor : var(--color1);\n\t\t}\n \t\t.logEntryDisplayHeader\n\t\t{\n\t\t\tfont-size\t\t:\t150%;\n\t\t\tcolor : var(--color1);\n\t\t}\n\t\t.logEntryDisplayTextArea \n\t\t{\n\t\t\tfont-size\t\t:\t150%;\n\t\t\twidth\t\t\t:   95%;\n\t\t}\n   ",
        "output": "str",
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "966e270e.701e48",
        "type": "subflow:e3c68b88.d82258",
        "z": "8341090a.df9758",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "899d0666.97b868"
            ]
        ]
    },
    {
        "id": "9460eaf0.da7628",
        "type": "subflow:ca529822.9112f8",
        "z": "8341090a.df9758",
        "name": "",
        "x": 620,
        "y": 80,
        "wires": []
    },
    {
        "id": "899d0666.97b868",
        "type": "subflow:2c5d25cb.3428ca",
        "z": "8341090a.df9758",
        "x": 420,
        "y": 80,
        "wires": [
            [
                "9460eaf0.da7628"
            ]
        ]
    },
    {
        "id": "93049b70.2dc5c8",
        "type": "mqtt out",
        "z": "4c1c8ca0.447d94",
        "name": "Publish Readings",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "79250bf3.365cc4",
        "x": 1110,
        "y": 1200,
        "wires": []
    },
    {
        "id": "5023092b.a0fe38",
        "type": "mqtt in",
        "z": "4c1c8ca0.447d94",
        "name": "Subscribe",
        "topic": "",
        "qos": "0",
        "datatype": "auto",
        "broker": "79250bf3.365cc4",
        "nl": false,
        "rap": false,
        "inputs": 1,
        "x": 940,
        "y": 100,
        "wires": [
            [
                "257906ae.f6991a"
            ]
        ]
    },
    {
        "id": "49c7b59e.00e86c",
        "type": "inject",
        "z": "4c1c8ca0.447d94",
        "name": "init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "init",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 80,
        "wires": [
            [
                "f7b2b73c.569598",
                "9d7a5ea0031d5852"
            ]
        ]
    },
    {
        "id": "f7b2b73c.569598",
        "type": "function",
        "z": "4c1c8ca0.447d94",
        "name": "Init flow Variables",
        "func": "let deviceProps = {\n    resMode   :   0,\n    imageDelay : 20000,\n    triggerMode: 0,\n    manualTrigger: 0,\n    reset: 0\n};\nflow.set('deviceProps',deviceProps);\nflow.set('resettingCamera',true);\nflow.set('cameraInUse',false);\nflow.set('lastTriggerTime',new Date().getTime());\nflow.set('cameraProcess', {fill: 'none', pid:'none'});\nflow.set('imageFileCounter',0);\nlet topic = deviceProps.box + '/' + deviceProps.cubeType + '/' + deviceProps.trayType + '/' + deviceProps.trayName + '/setting/#'\nreturn {topic:\"init\", payload:true};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 80,
        "wires": [
            [
                "88611815.916988"
            ]
        ]
    },
    {
        "id": "257906ae.f6991a",
        "type": "json",
        "z": "4c1c8ca0.447d94",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1090,
        "y": 100,
        "wires": [
            [
                "c2106663.a49658"
            ]
        ]
    },
    {
        "id": "c2106663.a49658",
        "type": "function",
        "z": "4c1c8ca0.447d94",
        "name": "Filter MQTT",
        "func": "return {topic:msg.topic.split('/')[5], payload:msg.payload};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 100,
        "wires": [
            [
                "9e75e21c.458df"
            ]
        ]
    },
    {
        "id": "9e75e21c.458df",
        "type": "switch",
        "z": "4c1c8ca0.447d94",
        "name": "mqtt topic",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "setting",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ping",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1460,
        "y": 100,
        "wires": [
            [
                "d2572e9a.d2ef9"
            ],
            [
                "223d87820c7653b2"
            ]
        ]
    },
    {
        "id": "d2572e9a.d2ef9",
        "type": "function",
        "z": "4c1c8ca0.447d94",
        "name": "Set deviceProps",
        "func": "flow.set('deviceProps', msg.payload); \nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 60,
        "wires": [
            [
                "557e4f40.b904e"
            ]
        ]
    },
    {
        "id": "c0939e4a.6386f",
        "type": "exec",
        "z": "4c1c8ca0.447d94",
        "command": "pm2 restart red",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Restart",
        "x": 2020,
        "y": 80,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "9e290594.69c548",
        "type": "switch",
        "z": "4c1c8ca0.447d94",
        "name": "Reset Tray",
        "property": "payload.reset",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1830,
        "y": 100,
        "wires": [
            [
                "c0939e4a.6386f"
            ],
            [
                "236a8168.66f7fe"
            ]
        ]
    },
    {
        "id": "236a8168.66f7fe",
        "type": "exec",
        "z": "4c1c8ca0.447d94",
        "command": "sudo reboot",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Reboot",
        "x": 2020,
        "y": 140,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "557e4f40.b904e",
        "type": "delay",
        "z": "4c1c8ca0.447d94",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1820,
        "y": 60,
        "wires": [
            [
                "9e290594.69c548"
            ]
        ]
    },
    {
        "id": "242fb7ee.ec2318",
        "type": "exec",
        "z": "4c1c8ca0.447d94",
        "command": "flirLepton25i2c/flirLepton25i2c.exe setFfcStateToManual",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "setFfcStateToManual",
        "x": 500,
        "y": 420,
        "wires": [
            [
                "1cc9fd62.227313"
            ],
            [],
            []
        ]
    },
    {
        "id": "6abb16.fc9774ec",
        "type": "exec",
        "z": "4c1c8ca0.447d94",
        "command": "flirLepton25i2c/flirLepton25i2c.exe reboot",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "reboot",
        "x": 170,
        "y": 420,
        "wires": [
            [
                "e1d61d76.3569b"
            ],
            [],
            []
        ]
    },
    {
        "id": "e1d61d76.3569b",
        "type": "delay",
        "z": "4c1c8ca0.447d94",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 320,
        "y": 420,
        "wires": [
            [
                "242fb7ee.ec2318"
            ]
        ]
    },
    {
        "id": "1cc9fd62.227313",
        "type": "delay",
        "z": "4c1c8ca0.447d94",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 700,
        "y": 420,
        "wires": [
            [
                "82484d70.a7df"
            ]
        ]
    },
    {
        "id": "82484d70.a7df",
        "type": "exec",
        "z": "4c1c8ca0.447d94",
        "command": "flirLepton25i2c/flirLepton25i2c.exe performFfc",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "performFfc",
        "x": 850,
        "y": 420,
        "wires": [
            [
                "dc342449.ddba88"
            ],
            [],
            []
        ]
    },
    {
        "id": "dc342449.ddba88",
        "type": "delay",
        "z": "4c1c8ca0.447d94",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1020,
        "y": 420,
        "wires": [
            [
                "4532c4da.1b43ac",
                "144bce3e.f1c012"
            ]
        ]
    },
    {
        "id": "4532c4da.1b43ac",
        "type": "function",
        "z": "4c1c8ca0.447d94",
        "name": "clear camera reset",
        "func": "flow.set('resettingCamera',false);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "x": 1190,
        "y": 420,
        "wires": []
    },
    {
        "id": "88611815.916988",
        "type": "link out",
        "z": "4c1c8ca0.447d94",
        "name": "init complete",
        "links": [
            "249ebb41.0fd534"
        ],
        "x": 435,
        "y": 80,
        "wires": []
    },
    {
        "id": "249ebb41.0fd534",
        "type": "link in",
        "z": "4c1c8ca0.447d94",
        "name": "init camera in",
        "links": [
            "88611815.916988",
            "a9ba07c0.2737f8",
            "69c47bae.941b24"
        ],
        "x": 75,
        "y": 420,
        "wires": [
            [
                "6abb16.fc9774ec",
                "f096f02d.508c5"
            ]
        ]
    },
    {
        "id": "f3ff0af9.c4fdb8",
        "type": "rpi-gpio out",
        "z": "4c1c8ca0.447d94",
        "name": "Yellow LED",
        "pin": "13",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 190,
        "y": 200,
        "wires": []
    },
    {
        "id": "316e94c2.271bec",
        "type": "link in",
        "z": "4c1c8ca0.447d94",
        "name": "Yellow Led In",
        "links": [
            "30a567e5.1d7ed8",
            "d9b1bb3f.ca7528",
            "db05df01.f76e1",
            "c7378244.9d05",
            "e880ae95.bdd76"
        ],
        "x": 75,
        "y": 200,
        "wires": [
            [
                "f3ff0af9.c4fdb8"
            ]
        ]
    },
    {
        "id": "73e006b1.cf7528",
        "type": "rpi-gpio out",
        "z": "4c1c8ca0.447d94",
        "name": "Red LED",
        "pin": "26",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 180,
        "y": 260,
        "wires": []
    },
    {
        "id": "19963a75.2b0f46",
        "type": "rpi-gpio out",
        "z": "4c1c8ca0.447d94",
        "name": "Blue LED",
        "pin": "19",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 180,
        "y": 320,
        "wires": []
    },
    {
        "id": "7af84ca8.ba5584",
        "type": "link in",
        "z": "4c1c8ca0.447d94",
        "name": "Red LED In",
        "links": [
            "d9b1bb3f.ca7528",
            "e7beb734.ed9628",
            "7667b964.83dff8",
            "db05df01.f76e1",
            "c7378244.9d05"
        ],
        "x": 75,
        "y": 260,
        "wires": [
            [
                "73e006b1.cf7528"
            ]
        ]
    },
    {
        "id": "cb51837e.00842",
        "type": "link in",
        "z": "4c1c8ca0.447d94",
        "name": "Blue LED In",
        "links": [
            "d9b1bb3f.ca7528",
            "69b81e64.314a7",
            "db05df01.f76e1",
            "c7378244.9d05",
            "a99063ba.90a37",
            "41fe535d.8de9ac"
        ],
        "x": 75,
        "y": 320,
        "wires": [
            [
                "19963a75.2b0f46"
            ]
        ]
    },
    {
        "id": "f096f02d.508c5",
        "type": "function",
        "z": "4c1c8ca0.447d94",
        "name": "Set 1",
        "func": "return {topic:'turnOn', payload:1};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 170,
        "y": 480,
        "wires": [
            [
                "db05df01.f76e1"
            ]
        ]
    },
    {
        "id": "db05df01.f76e1",
        "type": "link out",
        "z": "4c1c8ca0.447d94",
        "name": "Start FCC out",
        "links": [
            "316e94c2.271bec",
            "7af84ca8.ba5584",
            "cb51837e.00842"
        ],
        "x": 255,
        "y": 480,
        "wires": []
    },
    {
        "id": "144bce3e.f1c012",
        "type": "function",
        "z": "4c1c8ca0.447d94",
        "name": "Set 0",
        "func": "return {topic:'turnOn', payload:0};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1150,
        "y": 480,
        "wires": [
            [
                "c7378244.9d05"
            ]
        ]
    },
    {
        "id": "c7378244.9d05",
        "type": "link out",
        "z": "4c1c8ca0.447d94",
        "name": "FCC complete out",
        "links": [
            "316e94c2.271bec",
            "7af84ca8.ba5584",
            "cb51837e.00842"
        ],
        "x": 1235,
        "y": 480,
        "wires": []
    },
    {
        "id": "89cfd52.1eb2928",
        "type": "inject",
        "z": "4c1c8ca0.447d94",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": true,
        "onceDelay": "120",
        "topic": "Init FFC",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 620,
        "wires": [
            [
                "1ee58b30.404be5",
                "38ff25f5.65419a"
            ]
        ]
    },
    {
        "id": "1ee58b30.404be5",
        "type": "function",
        "z": "4c1c8ca0.447d94",
        "name": "hold capture",
        "func": "flow.set('resettingCamera',true);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 370,
        "y": 620,
        "wires": [
            [
                "808c8caf.d76fb"
            ]
        ]
    },
    {
        "id": "2fcf61df.b03cce",
        "type": "delay",
        "z": "4c1c8ca0.447d94",
        "name": "",
        "pauseType": "delay",
        "timeout": "1500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 720,
        "y": 600,
        "wires": [
            [
                "bef6edc2.3d633",
                "c9309be.7782e68"
            ]
        ]
    },
    {
        "id": "808c8caf.d76fb",
        "type": "exec",
        "z": "4c1c8ca0.447d94",
        "command": "flirLepton25i2c/flirLepton25i2c.exe performFfc",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "performFfc",
        "x": 530,
        "y": 620,
        "wires": [
            [
                "2fcf61df.b03cce"
            ],
            [],
            []
        ]
    },
    {
        "id": "bef6edc2.3d633",
        "type": "function",
        "z": "4c1c8ca0.447d94",
        "name": "resume capture",
        "func": "flow.set('resettingCamera',false);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 940,
        "y": 600,
        "wires": []
    },
    {
        "id": "38ff25f5.65419a",
        "type": "function",
        "z": "4c1c8ca0.447d94",
        "name": "set to 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 680,
        "wires": [
            [
                "e880ae95.bdd76"
            ]
        ]
    },
    {
        "id": "c9309be.7782e68",
        "type": "function",
        "z": "4c1c8ca0.447d94",
        "name": "set to 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 640,
        "wires": [
            [
                "e880ae95.bdd76"
            ]
        ]
    },
    {
        "id": "e880ae95.bdd76",
        "type": "link out",
        "z": "4c1c8ca0.447d94",
        "name": "FFC Toggle Out",
        "links": [
            "316e94c2.271bec"
        ],
        "x": 555,
        "y": 680,
        "wires": []
    },
    {
        "id": "fe5df31e.a773",
        "type": "function",
        "z": "4c1c8ca0.447d94",
        "name": "Process Data",
        "func": "let deviceProps = flow.get('deviceProps');\n\nif (msg.payload.length < 1)\n{\n    var errCount = context.get('errCount');\n    if (errCount == undefined) errCount = 0;\n    ++errCount\n    if (errCount < 3)\n    {\n        context.set('errCount',errCount);\n        return [null, null];\n    }\n    else\n    {\n        context.set('errCount',0);\n        node.warn(\"Resetting Camera\");\n        flow.set('resettingCamera',true);\n        return [null, {topic:'resetCamera',payload:true}];\n    }\n}\nelse\n{\n    context.set('errCount',0);\n}\nvar imgArray = [];\nvar dataView     = new DataView(new ArrayBuffer(2));\nvar ndataPts = 4800 * deviceProps.resMode * deviceProps.resMode;\nvar nrows = 60 * deviceProps.resMode;\nvar ncols = 80 * deviceProps.resMode;\nfor (var irow = 0; irow < ndataPts; ++irow)\n{\n        dataView.setUint8(0, msg.payload[irow * 2]);\n        dataView.setUint8(1, msg.payload[irow * 2 + 1]);\n        imgArray[irow] = dataView.getUint16(0);\n}\n\ndeviceProps.manualTrigger = 0;\nlet deviceConfig = global.get(\"deviceConfig\");\nlet topic = deviceConfig.box + '/' + deviceConfig.cubeType + '/' + deviceConfig.trayType + '/' + deviceConfig.trayName + '/reading'\nreturn [{topic:topic,payload:msg.payload}, null];\n//return [{topic:topic,payload:imgArray}, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1180,
        "wires": [
            [
                "93049b70.2dc5c8",
                "e49d2a101e71bc08"
            ],
            [
                "a9ba07c0.2737f8"
            ]
        ]
    },
    {
        "id": "e7605d.fa67cfa",
        "type": "exec",
        "z": "4c1c8ca0.447d94",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Capture Flir image",
        "x": 690,
        "y": 1040,
        "wires": [
            [
                "fe5df31e.a773",
                "4983dfa0.ae56b"
            ],
            [
                "4983dfa0.ae56b"
            ],
            []
        ]
    },
    {
        "id": "26385995.f6c7e6",
        "type": "function",
        "z": "4c1c8ca0.447d94",
        "name": "Get camera process",
        "func": "var newMsg = {fill: 'none', pid:'none'}\nif ((\"fill\" in msg.status)) \n{\n    newMsg.fill = msg.status.fill;\n    newMsg.pid = msg.status.text;\n}\nflow.set('cameraProcess', newMsg);\nreturn null;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 320,
        "y": 960,
        "wires": []
    },
    {
        "id": "615d489b.7be438",
        "type": "delay",
        "z": "4c1c8ca0.447d94",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 740,
        "y": 980,
        "wires": [
            [
                "4c249217.371ccc"
            ]
        ]
    },
    {
        "id": "4c249217.371ccc",
        "type": "function",
        "z": "4c1c8ca0.447d94",
        "name": "Check if Process hung",
        "func": "var process = flow.get('cameraProcess');\nvar newMsg = null;\nif (process.pid != 'none')\n{\n    var pid = Number(process.pid.substring(4)) + 0;\n    newMsg = {topic:'killProcess',payload:pid}\n    node.warn('Camera Hang')\n    node.warn(newMsg)\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 940,
        "y": 980,
        "wires": [
            [
                "51a5d6fa.668fd8",
                "f356c11b.05aed"
            ]
        ]
    },
    {
        "id": "51a5d6fa.668fd8",
        "type": "exec",
        "z": "4c1c8ca0.447d94",
        "command": "kill -9",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1130,
        "y": 980,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "25c0c471.5d5bcc",
        "type": "link in",
        "z": "4c1c8ca0.447d94",
        "name": "Capture Flir image In",
        "links": [
            "7954081a.e8ed48",
            "217bb4e6.bc7ffc",
            "81763557.747698"
        ],
        "x": 95,
        "y": 1040,
        "wires": [
            [
                "f09c19da.79ebb8"
            ]
        ]
    },
    {
        "id": "7954081a.e8ed48",
        "type": "link out",
        "z": "4c1c8ca0.447d94",
        "name": "target distance out",
        "links": [
            "25c0c471.5d5bcc"
        ],
        "x": 1335,
        "y": 800,
        "wires": []
    },
    {
        "id": "36e889a9.df4dd6",
        "type": "function",
        "z": "4c1c8ca0.447d94",
        "name": "Check for camera reset",
        "func": "if (flow.get('resettingCamera')) return null;\nif (flow.get('cameraInUse')) return null;\nflow.set('cameraInUse',true);\nmsg.payload = \"\"\nlet deviceProps = flow.get('deviceProps');\nif (deviceProps.resMode == 0) return null;\nif (deviceProps.resMode == 1) msg.payload = \"flirLepton25capture/flirLepton25capture.exe\"\nif (deviceProps.resMode == 2) msg.payload = \"flirLepton35capture/flirLepton35capture.exe\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1040,
        "wires": [
            [
                "e7605d.fa67cfa",
                "615d489b.7be438",
                "f4d3d03d.e16e2"
            ]
        ]
    },
    {
        "id": "f356c11b.05aed",
        "type": "function",
        "z": "4c1c8ca0.447d94",
        "name": "Try Manual Trigger Again",
        "func": "if (flow.get('deviceProps').manualTrigger == 1) return {topic:'manualTrigger',payload:true}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 860,
        "wires": [
            [
                "7aa7f85.2101208"
            ]
        ]
    },
    {
        "id": "7aa7f85.2101208",
        "type": "delay",
        "z": "4c1c8ca0.447d94",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1000,
        "y": 860,
        "wires": [
            [
                "7954081a.e8ed48"
            ]
        ]
    },
    {
        "id": "bfc9a6c.b3b1f58",
        "type": "inject",
        "z": "4c1c8ca0.447d94",
        "name": "5 Hz",
        "repeat": "0.2",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 750,
        "y": 800,
        "wires": [
            [
                "1ad8f49f.933d5b"
            ]
        ]
    },
    {
        "id": "1ad8f49f.933d5b",
        "type": "function",
        "z": "4c1c8ca0.447d94",
        "name": "Programmable interval",
        "func": "if (flow.get('resettingCamera')) return null;\nif (flow.get('cameraInUse')) return null;\nif(flow.get('deviceProps').triggerMode  == 0)\n{\n    if(flow.get('deviceProps').manualTrigger  == 1) return msg;\n}\nif(flow.get('deviceProps').triggerMode  == 1)\n{\n    var now = new Date().getTime();\n    if ((now - flow.get('lastTriggerTime')) > flow.get('deviceProps').imageDelay) \n    {\n        flow.set('lastTriggerTime',now);\n        return msg;\n    }\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 800,
        "wires": [
            [
                "7954081a.e8ed48"
            ]
        ]
    },
    {
        "id": "f09c19da.79ebb8",
        "type": "delay",
        "z": "4c1c8ca0.447d94",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 210,
        "y": 1040,
        "wires": [
            [
                "36e889a9.df4dd6"
            ]
        ]
    },
    {
        "id": "4983dfa0.ae56b",
        "type": "function",
        "z": "4c1c8ca0.447d94",
        "name": "Reset Delay",
        "func": "return [{topic:\"reset\",reset:1},{topic:\"setCameraAvailable\",payload:1}];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 930,
        "y": 1040,
        "wires": [
            [
                "615d489b.7be438",
                "10f2361.86b23ca"
            ],
            [
                "9076c61b.db6f08",
                "10f2361.86b23ca"
            ]
        ]
    },
    {
        "id": "e62483a8.9b54b",
        "type": "function",
        "z": "4c1c8ca0.447d94",
        "name": "Set Camera Available",
        "func": "flow.set('cameraInUse',false);\nreturn null;",
        "outputs": 0,
        "noerr": 0,
        "x": 1340,
        "y": 1040,
        "wires": []
    },
    {
        "id": "9076c61b.db6f08",
        "type": "delay",
        "z": "4c1c8ca0.447d94",
        "name": "",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1130,
        "y": 1040,
        "wires": [
            [
                "e62483a8.9b54b"
            ]
        ]
    },
    {
        "id": "a9ba07c0.2737f8",
        "type": "link out",
        "z": "4c1c8ca0.447d94",
        "name": "Reset Out",
        "links": [
            "249ebb41.0fd534"
        ],
        "x": 755,
        "y": 1220,
        "wires": []
    },
    {
        "id": "f4d3d03d.e16e2",
        "type": "function",
        "z": "4c1c8ca0.447d94",
        "name": "Set 1",
        "func": "return {topic:'turnOn', payload:1};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 1100,
        "wires": [
            [
                "a99063ba.90a37"
            ]
        ]
    },
    {
        "id": "a99063ba.90a37",
        "type": "link out",
        "z": "4c1c8ca0.447d94",
        "name": " Take Image start out",
        "links": [
            "cb51837e.00842"
        ],
        "x": 635,
        "y": 1100,
        "wires": []
    },
    {
        "id": "10f2361.86b23ca",
        "type": "function",
        "z": "4c1c8ca0.447d94",
        "name": "Set 0",
        "func": "return {topic:'turnOn', payload:0};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1090,
        "y": 1080,
        "wires": [
            [
                "41fe535d.8de9ac"
            ]
        ]
    },
    {
        "id": "41fe535d.8de9ac",
        "type": "link out",
        "z": "4c1c8ca0.447d94",
        "name": "Take Image complete out",
        "links": [
            "cb51837e.00842"
        ],
        "x": 1175,
        "y": 1080,
        "wires": []
    },
    {
        "id": "f04f5c6b.15358",
        "type": "status",
        "z": "4c1c8ca0.447d94",
        "name": "",
        "scope": [
            "e7605d.fa67cfa"
        ],
        "x": 140,
        "y": 960,
        "wires": [
            [
                "26385995.f6c7e6"
            ]
        ]
    },
    {
        "id": "cb94b8d2764f7758",
        "type": "inject",
        "z": "4c1c8ca0.447d94",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 780,
        "y": 1300,
        "wires": [
            [
                "fe24f5f293cb87be"
            ]
        ]
    },
    {
        "id": "fe24f5f293cb87be",
        "type": "function",
        "z": "4c1c8ca0.447d94",
        "name": "test",
        "func": "let deviceProps = flow.get(\"deviceProps\");\ndeviceProps.resMode = 1;\ndeviceProps.manualTrigger = 1;\nlet topic = deviceProps.box + '/' + deviceProps.cubeType + '/' + deviceProps.trayType + '/' + deviceProps.trayName + '/setting/setting'\nreturn {topic:topic,payload:deviceProps};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 1300,
        "wires": [
            [
                "93049b70.2dc5c8"
            ]
        ]
    },
    {
        "id": "223d87820c7653b2",
        "type": "debug",
        "z": "4c1c8ca0.447d94",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1620,
        "y": 180,
        "wires": []
    },
    {
        "id": "ae04a348b0fd7bb3",
        "type": "file in",
        "z": "4c1c8ca0.447d94",
        "name": "",
        "filename": "deviceConfig.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 710,
        "y": 240,
        "wires": [
            [
                "1df602bdd13e7708"
            ]
        ]
    },
    {
        "id": "1df602bdd13e7708",
        "type": "json",
        "z": "4c1c8ca0.447d94",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 870,
        "y": 240,
        "wires": [
            [
                "47103c0bdc2267e3"
            ]
        ]
    },
    {
        "id": "47103c0bdc2267e3",
        "type": "function",
        "z": "4c1c8ca0.447d94",
        "name": "Setup comm",
        "func": "let deviceConfig = msg.payload;\nglobal.set('deviceConfig',deviceConfig);\nlet topic = deviceConfig.box + '/' + deviceConfig.cubeType + '/' + deviceConfig.trayType + '/' + deviceConfig.trayName + '/setting/#'\nlet disconnectMsg = {topic:\"disconnect\", action:\"disconnect\", payload:true, rate:200};\nlet connectMsg = {topic:\"connect\", action:\"connect\", payload:true, broker:{broker:deviceConfig.mqttServerIp, port:1883,username:deviceConfig.mqttUserName, password:deviceConfig.mqttPassword}, rate:200};\nlet subscribeMsg = {topic:topic, action:\"subscribe\", payload:true, rate:200}\nreturn {topic:\"setupMqtt\", payload:[disconnectMsg,connectMsg,subscribeMsg]};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 240,
        "wires": [
            [
                "b397387e773604cb"
            ]
        ]
    },
    {
        "id": "4af328db7b2d4192",
        "type": "inject",
        "z": "4c1c8ca0.447d94",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 520,
        "y": 240,
        "wires": [
            [
                "ae04a348b0fd7bb3"
            ]
        ]
    },
    {
        "id": "b397387e773604cb",
        "type": "split",
        "z": "4c1c8ca0.447d94",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1170,
        "y": 240,
        "wires": [
            [
                "1ae15dfc00c5f689"
            ]
        ]
    },
    {
        "id": "1ae15dfc00c5f689",
        "type": "function",
        "z": "4c1c8ca0.447d94",
        "name": "promote",
        "func": "return msg.payload;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 240,
        "wires": [
            [
                "cde9dafdd1caa9b6"
            ]
        ]
    },
    {
        "id": "cde9dafdd1caa9b6",
        "type": "delay",
        "z": "4c1c8ca0.447d94",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": true,
        "outputs": 1,
        "x": 1490,
        "y": 240,
        "wires": [
            [
                "5023092b.a0fe38"
            ]
        ]
    },
    {
        "id": "9d7a5ea0031d5852",
        "type": "delay",
        "z": "4c1c8ca0.447d94",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 260,
        "y": 120,
        "wires": [
            [
                "ae04a348b0fd7bb3"
            ]
        ]
    },
    {
        "id": "e49d2a101e71bc08",
        "type": "debug",
        "z": "4c1c8ca0.447d94",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 1160,
        "wires": []
    },
    {
        "id": "60c74f70488ead93",
        "type": "link in",
        "z": "4c1c8ca0.447d94",
        "name": "deviceConfigRead In",
        "links": [
            "a635d97482844fd9"
        ],
        "x": 535,
        "y": 300,
        "wires": [
            [
                "ae04a348b0fd7bb3"
            ]
        ]
    },
    {
        "id": "1e80ca53.767a96",
        "type": "http in",
        "z": "26093b29.39d8d4",
        "name": "/",
        "url": "/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 640,
        "wires": [
            [
                "930a7a63.11bf58"
            ]
        ]
    },
    {
        "id": "e1192fe0.96315",
        "type": "template",
        "z": "26093b29.39d8d4",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky Thermo Cam",
        "output": "str",
        "x": 220,
        "y": 680,
        "wires": [
            [
                "fc3a3f22.7533"
            ]
        ]
    },
    {
        "id": "fc3a3f22.7533",
        "type": "template",
        "z": "26093b29.39d8d4",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        var appStarted = false;\n        var networkList = null;\n        var selectedNetwork = -1;\n        useWebSockets(true);\n        let deviceConfig = null;\n        function onDocumentReady()\n        {\n            setRemoteApp(false);\n            $('#pwDialog').hide();\n        }\n        function onWebSocketOpen()\n        {\n            if (!appStarted)\n            {\n                sendActionMsg('getConfig', 'getConfig', {});\n                appStarted = true;\n            }\n        }\n        function onWebSocketClose()\n        {\n            wsConnectC();\n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'getConfig':\n                    deviceConfig = JSON.parse(JSON.stringify(msg.payload));\n                    console.log(msg.payload);\n                    $('#ssid').attr('value',deviceConfig.ssid);\n                    $('#ssidPw').attr('value',deviceConfig.ssidPw);\n                    $('#wifiCountry').attr('value',deviceConfig.wifiCountry);\n                    $('#mqttServerIp').attr('value',deviceConfig.mqttServerIp);\n                    $('#mqttUserName').attr('value',deviceConfig.mqttUserName);\n                    $('#mqttPassword').attr('value',deviceConfig.mqttPassword);\n                    $('#box').attr('value',deviceConfig.box);\n                    $('#trayType').attr('value',deviceConfig.trayType);\n                    $('#trayName').attr('value',deviceConfig.trayName);\n                    $('#cubeType').attr('value',deviceConfig.cubeType);\n                    break;\n                case 'saveConfig':\n                    $( \"#messageDialog\" ).dialog( \"close\" );\n                    $('#saveConfigButton').attr('disabled',false);\n                    acknowledgeDialog(\"Acknowledge\", \"Device Configuration\", \"Save Completed\");\n                    sendActionMsg('getConfig', 'getConfig', {});\n                    break;\n                default:\n                    break;\n                // code block\n            }\n        }\n        function saveConfig()\n        {\n            deviceConfig.ssid = $('#ssid').val();\n            deviceConfig.ssidPw = $('#ssidPw').val();\n            deviceConfig.wifiCountry = $('#wifiCountry').val();\n            deviceConfig.mqttServerIp = $('#mqttServerIp').val();\n            deviceConfig.mqttUserName = $('#mqttUserName').val();\n            deviceConfig.mqttPassword = $('#mqttPassword').val();\n            deviceConfig.box = $('#box').val();\n            deviceConfig.trayType = $('#trayType').val();\n            deviceConfig.trayName = $('#trayName').val();\n            deviceConfig.cubeType = $('#cubeType').val();\n            sendActionMsg('saveConfig', 'saveConfig', deviceConfig);\n            $('#saveConfigButton').attr('disabled',true);\n            messageDialog(\"Message\", \"Please Wait\", \"I will be back 25 secs.\")\n            \n        }\n",
        "output": "str",
        "x": 510,
        "y": 640,
        "wires": [
            [
                "380c1491.22fa9c"
            ]
        ]
    },
    {
        "id": "380c1491.22fa9c",
        "type": "template",
        "z": "26093b29.39d8d4",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n",
        "output": "str",
        "x": 500,
        "y": 680,
        "wires": [
            [
                "4e6c8908.0524c8"
            ]
        ]
    },
    {
        "id": "41d7170c.80e638",
        "type": "template",
        "z": "26093b29.39d8d4",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 10px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.wirelessSetup}}}\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 750,
        "y": 680,
        "wires": [
            [
                "28f9a36b.9e7a3c"
            ]
        ]
    },
    {
        "id": "930a7a63.11bf58",
        "type": "template",
        "z": "26093b29.39d8d4",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "basic.png",
        "output": "str",
        "x": 230,
        "y": 640,
        "wires": [
            [
                "e1192fe0.96315"
            ]
        ]
    },
    {
        "id": "4e6c8908.0524c8",
        "type": "template",
        "z": "26093b29.39d8d4",
        "name": "html.wirelessSetup",
        "field": "payload.html.wirelessSetup",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <p class='card-title'>Configuration</p>\n                         </div>\n                        <div class='col-md-2'>\n                        </div>\n                    </div>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 10px;'>\n                            <div class='col-md-4' align=\"left\">\n                                <span class=\"tableText\">SSID</span>\n                            </div>\n                            <div class='col-md-8'>\n                                <input class=\"form-control tableText\" id=\"ssid\" type=\"text\" value=\"\" />\n                             </div>\n                        </div>\n                        <div class='row' style='padding-bottom: 10px;'>\n                            <div class='col-md-4'  align=\"left\">\n                                <span class=\"tableText\">SSID PW</span>\n                            </div>\n                            <div class='col-md-8'>\n                                <input class=\"form-control tableText\" id=\"ssidPw\" type=\"text\" value=\"\" />\n                             </div>\n                        </div>\n                        <div class='row' style='padding-bottom: 10px;'>\n                            <div class='col-md-4'  align=\"left\">\n                                <span class=\"tableText\">Wifi Country</span>\n                            </div>\n                            <div class='col-md-8'>\n                                <input class=\"form-control tableText\" id=\"wifiCountry\" type=\"text\" value=\"\" />\n                             </div>\n                        </div>\n                        <div class='row' style='padding-bottom: 10px;'>\n                            <div class='col-md-4'  align=\"left\">\n                                <span class=\"tableText\">MQTT Server Ip</span>\n                            </div>\n                            <div class='col-md-8'>\n                                <input class=\"form-control tableText\" id=\"mqttServerIp\" type=\"text\" value=\"\" />\n                             </div>\n                        </div>\n                        <div class='row' style='padding-bottom: 10px;'>\n                            <div class='col-md-4'  align=\"left\">\n                                <span class=\"tableText\">MQTT User Name</span>\n                            </div>\n                            <div class='col-md-8'>\n                                <input class=\"form-control tableText\" id=\"mqttUserName\" type=\"text\" value=\"\" />\n                             </div>\n                        </div>\n                        <div class='row' style='padding-bottom: 10px;'>\n                            <div class='col-md-4'  align=\"left\">\n                                <span class=\"tableText\">MQTT Password</span>\n                            </div>\n                            <div class='col-md-8'>\n                                <input class=\"form-control tableText\" id=\"mqttPassword\" type=\"text\" value=\"\" />\n                             </div>\n                        </div>\n                        <div class='row' style='padding-bottom: 10px;'>\n                            <div class='col-md-4'  align=\"left\">\n                                <span class=\"tableText\">Box</span>\n                            </div>\n                            <div class='col-md-8'>\n                                <input class=\"form-control tableText\" id=\"box\" type=\"text\" value=\"\" />\n                             </div>\n                        </div>\n                        <div class='row' style='padding-bottom: 10px;'>\n                            <div class='col-md-4'  align=\"left\">\n                                <span class=\"tableText\">Tray Type</span>\n                            </div>\n                            <div class='col-md-8'>\n                                <input class=\"form-control tableText\" id=\"trayType\" type=\"text\" value=\"\" />\n                             </div>\n                        </div>\n                        <div class='row' style='padding-bottom: 10px;'>\n                            <div class='col-md-4'  align=\"left\">\n                                <span class=\"tableText\">Tray Name</span>\n                            </div>\n                            <div class='col-md-8'>\n                                <input class=\"form-control tableText\" id=\"trayName\" type=\"text\" value=\"\" />\n                             </div>\n                        </div>\n                        <div class='row' style='padding-bottom: 10px;'>\n                            <div class='col-md-4'  align=\"left\">\n                                <span class=\"tableText\">Cube Type</span>\n                            </div>\n                            <div class='col-md-8'>\n                                <input class=\"form-control tableText\" id=\"cubeType\" type=\"text\" value=\"\" />\n                             </div>\n                        </div>\n                        <div class='row' style='padding-bottom: 10px;'>\n                            <div class='col-md-4'>\n                            </div>\n                            <div class='col-md-6'>\n                                <button class='btn btn-block card-button big-text' id=\"saveConfigButton\" onclick=\"saveConfig()\" >Update Configuration</button>\n                             </div>\n                            <div class='col-md-2'>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 790,
        "y": 640,
        "wires": [
            [
                "41d7170c.80e638"
            ]
        ]
    },
    {
        "id": "ab64b0d5.c3fee",
        "type": "websocket in",
        "z": "26093b29.39d8d4",
        "name": "/websocket",
        "server": "c427a7cd.35f1f8",
        "client": "",
        "x": 100,
        "y": 80,
        "wires": [
            [
                "dbec0823.672678"
            ]
        ]
    },
    {
        "id": "9bc013a4.b46c",
        "type": "websocket out",
        "z": "26093b29.39d8d4",
        "name": "/websocket",
        "server": "c427a7cd.35f1f8",
        "client": "",
        "x": 1430,
        "y": 80,
        "wires": []
    },
    {
        "id": "dbec0823.672678",
        "type": "json",
        "z": "26093b29.39d8d4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 270,
        "y": 80,
        "wires": [
            [
                "bb0701eb.a4b29"
            ]
        ]
    },
    {
        "id": "5ead619d.4bfff",
        "type": "switch",
        "z": "26093b29.39d8d4",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getConfig",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "saveConfig",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 80,
        "wires": [
            [
                "73cbb6bb5603e94e"
            ],
            [
                "eff546a6946ba8ef"
            ]
        ]
    },
    {
        "id": "bb0701eb.a4b29",
        "type": "function",
        "z": "26093b29.39d8d4",
        "name": "set userId and topic",
        "func": "return {\n    topic   : msg.payload.topic, \n    payload : msg.payload.payload};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 80,
        "wires": [
            [
                "5ead619d.4bfff"
            ]
        ]
    },
    {
        "id": "28f9a36b.9e7a3c",
        "type": "subflow:8341090a.df9758",
        "z": "26093b29.39d8d4",
        "name": "",
        "x": 1030,
        "y": 680,
        "wires": []
    },
    {
        "id": "73cbb6bb5603e94e",
        "type": "exec",
        "z": "26093b29.39d8d4",
        "command": "sudo cat /etc/wpa_supplicant/wpa_supplicant.conf",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "get wifiCreds",
        "x": 750,
        "y": 80,
        "wires": [
            [
                "38c647c5975abb61"
            ],
            [],
            []
        ]
    },
    {
        "id": "38c647c5975abb61",
        "type": "function",
        "z": "26093b29.39d8d4",
        "name": "parse wifiCreds",
        "func": "let string1 = msg.payload.substring(msg.payload.indexOf('ssid=\"') + 6);\nlet ssid = string1.substring(0,string1.indexOf('\"'));\nlet string2 = string1.substring(string1.indexOf('psk=\"') + 5);\nlet pw = string2.substring(0,string2.indexOf('\"'));\nreturn {topic:\"wifiCreds\",payload:{ssid:ssid,pw:pw}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 80,
        "wires": [
            [
                "f7fb41bb4dfe9f33"
            ]
        ]
    },
    {
        "id": "f7fb41bb4dfe9f33",
        "type": "function",
        "z": "26093b29.39d8d4",
        "name": "getConfig",
        "func": "let deviceConfig = global.get('deviceConfig');\ndeviceConfig.ssid = msg.payload.ssid;\ndeviceConfig.ssidPw = msg.payload.pw;\nreturn {topic:\"getConfig\", payload:{topic:\"getConfig\" ,payload:deviceConfig }};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 80,
        "wires": [
            [
                "9bc013a4.b46c"
            ]
        ]
    },
    {
        "id": "d90c1a8cc0d4f885",
        "type": "delay",
        "z": "26093b29.39d8d4",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1100,
        "y": 400,
        "wires": [
            [
                "268765715daed9f1"
            ]
        ]
    },
    {
        "id": "268765715daed9f1",
        "type": "function",
        "z": "26093b29.39d8d4",
        "name": "saveConfig",
        "func": "return {topic:\"saveConfig\", payload:{topic:\"saveConfig\" ,payload:true}};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 460,
        "wires": [
            [
                "9bc013a4.b46c"
            ]
        ]
    },
    {
        "id": "eff546a6946ba8ef",
        "type": "function",
        "z": "26093b29.39d8d4",
        "name": "Store device config",
        "func": "global.set('deviceConfig',msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 160,
        "wires": [
            [
                "e5f4f77a5c700499"
            ]
        ]
    },
    {
        "id": "e5f4f77a5c700499",
        "type": "file",
        "z": "26093b29.39d8d4",
        "name": "",
        "filename": "deviceConfig.json",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 930,
        "y": 160,
        "wires": [
            [
                "cfd1b23af43ba815"
            ]
        ]
    },
    {
        "id": "cfd1b23af43ba815",
        "type": "delay",
        "z": "26093b29.39d8d4",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1100,
        "y": 160,
        "wires": [
            [
                "a635d97482844fd9",
                "b1ffeee276d479d2"
            ]
        ]
    },
    {
        "id": "a635d97482844fd9",
        "type": "link out",
        "z": "26093b29.39d8d4",
        "name": "deviceConfigWrite Out",
        "mode": "link",
        "links": [
            "60c74f70488ead93"
        ],
        "x": 1255,
        "y": 160,
        "wires": []
    },
    {
        "id": "b1ffeee276d479d2",
        "type": "function",
        "z": "26093b29.39d8d4",
        "name": "Prepare WPA",
        "func": "var fileContents = 'ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\\nupdate_config=1\\ncountry=' + msg.payload.wifiCountry + '\\n';\nfileContents = fileContents + 'network={\\n   ssid=\"' + msg.payload.ssid + '\"\\n   psk=\"' + msg.payload.ssidPw + '\"\\n}\\n'\nreturn {topic:msg.topic, payload:fileContents};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 220,
        "wires": [
            [
                "00426bbbb3f81865"
            ]
        ]
    },
    {
        "id": "00426bbbb3f81865",
        "type": "file",
        "z": "26093b29.39d8d4",
        "name": "Write to ssid.conf",
        "filename": "/home/pi/ssid.conf",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 930,
        "y": 220,
        "wires": [
            [
                "a544e0739edeab28"
            ]
        ]
    },
    {
        "id": "a544e0739edeab28",
        "type": "exec",
        "z": "26093b29.39d8d4",
        "command": "sudo mv /home/pi/ssid.conf /etc/wpa_supplicant/wpa_supplicant.conf",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "mv ssid to wpa",
        "x": 1120,
        "y": 220,
        "wires": [
            [
                "3c0aef48201f66fd"
            ],
            [],
            []
        ]
    },
    {
        "id": "3c0aef48201f66fd",
        "type": "delay",
        "z": "26093b29.39d8d4",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1100,
        "y": 280,
        "wires": [
            [
                "a8b05503d0c8f662"
            ]
        ]
    },
    {
        "id": "a8b05503d0c8f662",
        "type": "exec",
        "z": "26093b29.39d8d4",
        "command": "sudo wpa_cli -i wlan0 reconfigure",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "wlan0 reconfigure",
        "x": 1130,
        "y": 340,
        "wires": [
            [
                "d90c1a8cc0d4f885"
            ],
            [],
            []
        ]
    }
]